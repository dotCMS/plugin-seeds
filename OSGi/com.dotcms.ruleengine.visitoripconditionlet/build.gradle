apply plugin: 'osgi'
apply plugin: 'eclipse'
apply plugin: 'java'

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

version = '1.0'

/* This plugin uses Java 1.8 */
sourceCompatibility = '1.8'

configurations {
    provided
    provided.extendsFrom(compile)
}

repositories {
    maven {
        url "http://repo.dotcms.com/artifactory/libs-release"
    }
    maven {
        url "http://repo.dotcms.com/artifactory/libs-snapshot-local"
    }
    mavenCentral()
}

dependencies {
    compile (group: 'com.dotcms', name: 'dotcms', version: '4.0_b85e558-SNAPSHOT'){
        transitive = true
    }
    /* Specifying an alternate configuration (see above 'configurations') keeps servlet-api.jar from being added to our own output Jar. */
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'

    testCompile 'org.mockito:mockito-core:2.0.31-beta'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile('org.testng:testng:6.9.6') {
        exclude(group: 'org.hamcrest')

    }

}

/* To compile we must add the additional configuration we created to our classpaths. */
sourceSets {
    main.compileClasspath += configurations.provided;
    test.compileClasspath += configurations.provided;
    test.runtimeClasspath += configurations.provided;
}

test {
    // enable TestNG support (default is JUnit)
    useTestNG()
    /* enabling standard streams allows us to see test failures and related stack traces in the console. */
    testLogging.showStandardStreams = true
}


jar {
    manifest {
        name = 'Osgi Visitor IP Conditionlet'
        instruction 'Bundle-Vendor', 'dotcms'
        instruction 'Bundle-Description', 'dotCMS OSGI Visitor IP Conditionlet'
        instruction 'Bundle-DocURL', 'http://www.dotcms.com'
        instruction 'Bundle-Activator', 'com.dotmarketing.osgi.ruleengine.conditionlet.Activator'        
        instruction 'DynamicImport-Package', '*'
        instruction 'Import-Package', '*;version=0'
    }
}
